# vim: ft=make
OCAMLC     = OCAMLPATH=$(OCAMLPATH) ocamlfind ocamlc
OCAMLOPT   = OCAMLPATH=$(OCAMLPATH) ocamlfind ocamlopt
OCAMLDEP   = OCAMLPATH=$(OCAMLPATH) ocamlfind ocamldep
OCAMLMKTOP = OCAMLPATH=$(OCAMLPATH) ocamlfind ocamlmktop
QTEST      = qtest
JSOO       = js_of_ocaml
JS_MINIFY  = jsoo_minify
WARNS      = Ael-3-31-40-41-42-44-45-48
override OCAMLOPTFLAGS += $(INCS) -w $(WARNS) -g -annot -O2 -S
override OCAMLFLAGS    += $(INCS) -w $(WARNS) -g -annot 
override CFLAGS        += --std=c11 -g -O2 -Wall -W -Wno-parentheses -fPIC
override CPPFLAGS      += --std=c11 -D_GNU_SOURCE -I $(shell ocamlfind ocamlc -where)

# TODO: configure
override CPPFLAGS += -DHAVE_INT128

# Common rules
.SUFFIXES: .ml .mli .cmo .cmi .cmx .cmxs .annot .top .js .html .adoc
.PHONY: clean distclean all check dep install uninstall reinstall \
        install-spec uninstall-spec

%.cmi: %.ml
	$(MAKE) $(addsuffix .cmo,$(basename $@))

%.cmo: %.ml
	$(OCAMLC) $(OCAMLFLAGS) -package "$(PACKAGES)" -c $<

%.cmx %.annot: %.ml
	$(OCAMLOPT) $(OCAMLOPTFLAGS) -package "$(PACKAGES)" -c $<

%.html: %.adoc
	asciidoc -a data-uri -a icons -a toc -a max-width=55em --theme volnitsky -o $@ $<

clean: clean-spec
	@for d in $(SUBDIRS) ; do $(MAKE) -C $$d $@ ; done
	$(RM) *.cm[o] *.a *.s .depend *.annot all_tests.* perf.data* gmon.out

distclean: clean distclean-spec
	@for d in $(SUBDIRS) ; do $(MAKE) -C $$d $@ ; done
	$(RM) *.cma *.cmx *.cmxa *.cmxs *.cmi oUnit-anon.cache qtest.targets.log *.opt *.byte *.top *.o

%.top: %.cma
	$(OCAMLMKTOP) $(OCAMLFLAGS) -custom -package "$(PACKAGES)" $< -o $@

# Tests

all_tests.ml: $(TESTABLE_SOURCES)
	$(QTEST) --shuffle -o $@ extract $^

check: all_tests.opt check-spec
	@OCAMLRUNPARAM=b ./all_tests.opt -bt || echo "FAILURE"

# Installation

install: $(INSTALLED) install-spec
	@for d in $(SUBDIRS) ; do $(MAKE) -C $$d $@ ; done

uninstall: uninstall-spec
	@for d in $(SUBDIRS) ; do $(MAKE) -C $$d $@ ; done

reinstall: uninstall install

# Dependencies

dep:
	@for d in $(SUBDIRS) ; do $(MAKE) -C $$d $@ ; done
	$(RM) .depend
	$(MAKE) .depend

.depend: $(SOURCES)
	@$(OCAMLDEP) -package "$(PACKAGES)" $(filter %.ml, $(SOURCES)) $(filter %.mli, $(SOURCES)) > $@
	@for f in $(filter %.c, $(SOURCES)); do \
		$(CC) $(CPPFLAGS) -MM -MT "$$(dirname $$f)/$$(basename $$f .c).o" $$f >> $@; \
	done
