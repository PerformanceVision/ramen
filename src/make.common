# vim: ft=make
OCAMLC     = OCAMLPATH=$(OCAMLPATH)/ ocamlfind ocamlc
OCAMLOPT   = OCAMLPATH=$(OCAMLPATH)/ ocamlfind ocamlopt
OCAMLDEP   = OCAMLPATH=$(OCAMLPATH)/ ocamlfind ocamldep
QTEST      = qtest
WARNS      = Ael-31-41-42-44-45-48
override OCAMLOPTFLAGS += $(INCS) -w $(WARNS) -g -annot -O2
override OCAMLFLAGS    += $(INCS) -w $(WARNS) -g -annot 
override CFLAGS        += --std=c11 -g -O2 -Wall -W -Wno-parentheses
override CPPFLAGS      += --std=c11 -D_GNU_SOURCE

# Common rules
.SUFFIXES: .ml .mli .cmo .cmi .cmx .cmxs .annot
.PHONY: clean distclean all check dep install uninstall reinstall

%.cmo: %.ml
	$(OCAMLC) $(OCAMLFLAGS) -package "$(PACKAGES)" -c $<

%.cmx %.annot: %.ml
	$(OCAMLOPT) $(OCAMLOPTFLAGS) -package "$(PACKAGES)" -c $<

clean: clean-spec
	$(RM) *.cm[iox] *.a *.s *.o .depend *.annot all_tests.* perf.data* gmon.out

distclean: clean distclean-spec
	$(RM) *.cma *.cmxa *.cmxs oUnit-anon.cache qtest.targets.log *.opt *.byte

# Tests

all_tests.ml: $(TESTABLE_SOURCES)
	$(QTEST) --shuffle -o $@ extract $^

all_tests.opt: $(TESTABLE_SOURCES:.ml=.cmx) all_tests.ml
	$(OCAMLOPT) -o $@ $(SYNTAX) -package "$(PACKAGES)" -package qcheck -linkpkg $(OCAMLOPTFLAGS) $^

check: all_tests.opt
	@OCAMLRUNPARAM=b ./all_tests.opt -bt || echo "FAILURE"

# Installation

install: $(INSTALLED)
	ocamlfind install $(NAME) $^

uninstall:
	ocamlfind remove $(NAME)

reinstall: uninstall install

# Dependencies

dep:
	$(RM) .depend
	$(MAKE) .depend

.depend: $(SOURCES)
	$(OCAMLDEP) -package "$(PACKAGES)" $(filter %.ml, $(SOURCES)) $(filter %.mli, $(SOURCES)) > $@
	@if test -n "$(filter %.c, $(SOURCES))" || test -n "$(filter %.h, $(SOURCES))"; then \
		$(CC) -M $(filter %.c, $(SOURCES)) $(filter %.h, $(SOURCES)) >> $@; \
	fi
